cql = require './cql'
measure = require './claim'
codes = require './cql-code-service'
cservice = new codes.CodeService {
    #valueset
    "2.16.840.1.113883.3.464.1003.102.12.1011": {
        #version
      "1": [
            #codes
        {
          "code": "363746003",
          #snomedct
          "system": "2.16.840.1.113883.6.96",
          "version": "2020-09"
        }
      ]
    },
    "2.16.840.1.113883.3.464.1003.102.12.1012": {
      "2": [
        {
          "code": "17741008",
          "system": "2.16.840.1.113883.6.96",
          "version": "2020-09"
        }
      ]
    }
  }
lib = new cql.Library(measure)
parameters = {
  MeasurementPeriod: new cql.Interval(cql.DateTime.parse('2013-01-01'), cql.DateTime.parse('2014-01-01'), true, false)
}
executor = new cql.Executor(lib, cservice, parameters)
psource = new cql.PatientSource [{
  "resourceType": "Bundle",
  "type": "transaction",
  "entry": [
    {
      "fullUrl": "urn:uuid:40d2066e-9037-763e-2bb3-c7e4b20a79d9",
      "resource": {
        "resourceType": "Patient",
        "id": "40d2066e-9037-763e-2bb3-c7e4b20a79d9",
        "meta" :{ "profile" : ["patient-qicore-qicore-patient"]},
        "text": {
          "status": "generated",
          "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">Generated by <a href=\"https://github.com/synthetichealth/synthea\">Synthea</a>.Version identifier: master-branch-latest\n .   Person seed: 5953585832767524024  Population seed: 1601550514946</div>"
        },
        "extension": [
          {
            "url": "http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName",
            "valueString": "Becky854 Torphy630"
          },
          {
            "url": "http://hl7.org/fhir/StructureDefinition/patient-birthPlace",
            "valueAddress": {
              "city": "Pembroke",
              "state": "Massachusetts",
              "country": "US"
            }
          },
          {
            "url": "http://synthetichealth.github.io/synthea/disability-adjusted-life-years",
            "valueDecimal": 0.0
          },
          {
            "url": "http://synthetichealth.github.io/synthea/quality-adjusted-life-years",
            "valueDecimal": 11.0
          }
        ],
        "identifier": [
          {
            "system": "https://github.com/synthetichealth/synthea",
            "value": "40d2066e-9037-763e-2bb3-c7e4b20a79d9"
          },
          {
            "type": {
              "coding": [
                {
                  "system": "http://terminology.hl7.org/CodeSystem/v2-0203",
                  "code": "MR",
                  "display": "Medical Record Number"
                }
              ],
              "text": "Medical Record Number"
            },
            "system": "http://hospital.smarthealthit.org",
            "value": "40d2066e-9037-763e-2bb3-c7e4b20a79d9"
          },
          {
            "type": {
              "coding": [
                {
                  "system": "http://terminology.hl7.org/CodeSystem/v2-0203",
                  "code": "SS",
                  "display": "Social Security Number"
                }
              ],
              "text": "Social Security Number"
            },
            "system": "http://hl7.org/fhir/sid/us-ssn",
            "value": "999-96-4590"
          }
        ],
        "name": [
          {
            "use": "official",
            "family": "Kunze215",
            "given": [
              "Alberto639"
            ]
          }
        ],
        "telecom": [
          {
            "system": "phone",
            "value": "555-184-3525",
            "use": "home"
          }
        ],
        "gender": "male",
        "birthDate": "2009-01-05",
        "address": [
          {
            "extension": [
              {
                "url": "http://hl7.org/fhir/StructureDefinition/geolocation",
                "extension": [
                  {
                    "url": "latitude",
                    "valueDecimal": 42.821342831436255
                  },
                  {
                    "url": "longitude",
                    "valueDecimal": -70.87362195510998
                  }
                ]
              }
            ],
            "line": [
              "663 Hartmann Highlands Apt 42"
            ],
            "city": "Newburyport",
            "state": "Massachusetts",
            "postalCode": "01950",
            "country": "US"
          }
        ],
        "maritalStatus": {
          "coding": [
            {
              "system": "http://terminology.hl7.org/CodeSystem/v3-MaritalStatus",
              "code": "S",
              "display": "Never Married"
            }
          ],
          "text": "Never Married"
        },
        "multipleBirthBoolean": false,
        "communication": [
          {
            "language": {
              "coding": [
                {
                  "system": "urn:ietf:bcp:47",
                  "code": "en-US",
                  "display": "English"
                }
              ],
              "text": "English"
            }
          }
        ]
      },
      "request": {
        "method": "POST",
        "url": "Patient"
      }
    },
    {
      "resourceType": "Claim",
      "meta": {
        "profile": ["claim-qicore-qicore-claim"]
      },
      "id": "100150",
      "text": {
        "status": "generated",
        "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">A human-readable rendering of the Oral Health Claim</div>"
      },
      "identifier": [
        {
          "system": "http://happyvalley.com/claim",
          "value": "12345"
        }
      ],
      "status": "active",
      "type": {
        "coding": [
          {
            "system": "http://terminology.hl7.org/CodeSystem/claim-type",
            "code": "oral"
          }
        ]
      },
      "use": "claim",
      "patient": {
        "reference": "Patient/1"
      },
      "created": "2014-08-16",
      "insurer": {
        "reference": "Organization/2"
      },
      "provider": {
        "reference": "Organization/1"
      },
      "priority": {
        "coding": [
          {
            "code": "normal"
          }
        ]
      },
      "payee": {
        "type": {
          "coding": [
            {
              "code": "provider"
            }
          ]
        }
      },
      "careTeam": [
        {
          "sequence": 1,
          "provider": {
            "reference": "Practitioner/example"
          }
        }
      ],
      "diagnosis": [
        {
          "sequence": 1,
          "diagnosisCodeableConcept": {
            "coding": [
              {
                "code": "654456"
              }
            ]
          },
          "type": [
            {
              "coding": [
                {
                  "system": "http://terminology.hl7.org/CodeSystem/ex-diagnosistype",
                  "code": "admitting"
                }
              ]
            }
          ],
          "packageCode": {
            "coding": [
              {
                "system": "http://terminology.hl7.org/CodeSystem/ex-diagnosisrelatedgroup",
                "code": "400",
                "display": "Head trauma - concussion"
              }
            ]
          }
        }
      ],
      "insurance": [
        {
          "sequence": 1,
          "focal": true,
          "identifier": {
            "system": "http://happyvalley.com/claim",
            "value": "12345"
          },
          "coverage": {
            "reference": "Coverage/9876B1"
          }
        }
      ],
      "item": [
        {
          "sequence": 1,
          "careTeamSequence": [
            1
          ],
          "productOrService": {
            "coding": [
              {
                "code": "1200"
              }
            ]
          },
          "servicedDate": "2014-08-16",
          "unitPrice": {
            "value": 135.57,
            "currency": "USD"
          },
          "net": {
            "value": 135.57,
            "currency": "USD"
          }
        }
      ]
    }
    ]
}
]
result = executor.exec(psource)
console.log("done")
console.log(result)